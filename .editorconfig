# Remove the line below if you want to inherit .editorconfig settings from higher directories
root = true

# C# files
[*.cs]

#### Core EditorConfig Options ####

# Indentation and spacing
indent_size                                                                                = 4
indent_style                                                                               = space
tab_width                                                                                  = 4

# New line preferences
end_of_line                                                                                = crlf
insert_final_newline                                                                       = false

#### .NET Coding Conventions ####

# Organize usings
dotnet_separate_import_directive_groups                                                    = true
dotnet_sort_system_directives_first                                                        = true

# this. and Me. preferences
dotnet_style_qualification_for_event                                                       = false : suggestion
dotnet_style_qualification_for_field                                                       = false : suggestion
dotnet_style_qualification_for_method                                                      = false : suggestion
dotnet_style_qualification_for_property                                                    = false : suggestion

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members                                 = true : suggestion
dotnet_style_predefined_type_for_member_access                                             = true : suggestion

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators                                    = always_for_clarity : warning
dotnet_style_parentheses_in_other_binary_operators                                         = always_for_clarity : warning
dotnet_style_parentheses_in_other_operators                                                = never_if_unnecessary : silent
dotnet_style_parentheses_in_relational_binary_operators                                    = always_for_clarity : warning

# Modifier preferences
dotnet_style_require_accessibility_modifiers                                               = for_non_interface_members : silent

# Expression-level preferences
csharp_style_deconstructed_variable_declaration                                            = true : warning
csharp_style_inlined_variable_declaration                                                  = true : warning
csharp_style_throw_expression                                                              = true : warning
dotnet_style_coalesce_expression                                                           = true : warning
dotnet_style_collection_initializer                                                        = true : warning
dotnet_style_explicit_tuple_names                                                          = true : warning
dotnet_style_null_propagation                                                              = true : warning
dotnet_style_object_initializer                                                            = true : warning
dotnet_style_prefer_auto_properties                                                        = true : warning
dotnet_style_prefer_compound_assignment                                                    = true : warning
dotnet_style_prefer_conditional_expression_over_assignment                                 = false : warning
dotnet_style_prefer_conditional_expression_over_return                                     = true : warning
dotnet_style_prefer_inferred_anonymous_type_member_names                                   = true : warning
dotnet_style_prefer_inferred_tuple_names                                                   = true : warning
dotnet_style_prefer_is_null_check_over_reference_equality_method                           = true : warning

# Field preferences
dotnet_style_readonly_field                                                                = true : warning

# Parameter preferences
dotnet_code_quality_unused_parameters                                                      = all : suggestion

#### C# Coding Conventions ####

# var preferences
csharp_style_var_elsewhere                                                                 = false : warning
csharp_style_var_for_built_in_types                                                        = false : warning
csharp_style_var_when_type_is_apparent                                                     = false : warning

# Expression-bodied members
csharp_style_expression_bodied_accessors                                                   = when_on_single_line : warning
csharp_style_expression_bodied_constructors                                                = when_on_single_line : warning
csharp_style_expression_bodied_indexers                                                    = when_on_single_line : warning
csharp_style_expression_bodied_lambdas                                                     = true : warning
csharp_style_expression_bodied_local_functions                                             = when_on_single_line : warning
csharp_style_expression_bodied_methods                                                     = when_on_single_line : warning
csharp_style_expression_bodied_operators                                                   = when_on_single_line : warning
csharp_style_expression_bodied_properties                                                  = when_on_single_line : warning

# Pattern matching preferences
csharp_style_pattern_matching_over_as_with_null_check                                      = true : warning
csharp_style_pattern_matching_over_is_with_cast_check                                      = true : warning

# Null-checking preferences
csharp_style_conditional_delegate_call                                                     = true : warning

# Modifier preferences
csharp_prefer_static_local_function                                                        = true : suggestion
csharp_preferred_modifier_order                                                            = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async

# Code-block preferences
csharp_prefer_braces                                                                       = when_multiline : suggestion
csharp_prefer_simple_using_statement                                                       = true : warning

# Expression-level preferences
csharp_prefer_simple_default_expression                                                    = true : warning
csharp_style_pattern_local_over_anonymous_function                                         = true : suggestion
csharp_style_prefer_index_operator                                                         = true : suggestion
csharp_style_prefer_range_operator                                                         = true : suggestion
csharp_style_unused_value_assignment_preference                                            = discard_variable : suggestion
csharp_style_unused_value_expression_statement_preference                                  = discard_variable : suggestion

# 'using' directive preferences
csharp_using_directive_placement                                                           = outside_namespace : suggestion

#### C# Formatting Rules ####

# New line preferences
csharp_new_line_before_catch                                                               = true
csharp_new_line_before_else                                                                = true
csharp_new_line_before_finally                                                             = true
csharp_new_line_before_members_in_anonymous_types                                          = true
csharp_new_line_before_members_in_object_initializers                                      = true
csharp_new_line_before_open_brace                                                          = all
csharp_new_line_between_query_expression_clauses                                           = true

# Indentation preferences
csharp_indent_block_contents                                                               = true
csharp_indent_braces                                                                       = false
csharp_indent_case_contents                                                                = true
csharp_indent_case_contents_when_block                                                     = false
csharp_indent_labels                                                                       = one_less_than_current
csharp_indent_switch_labels                                                                = true

# Space preferences
csharp_space_after_cast                                                                    = false
csharp_space_after_colon_in_inheritance_clause                                             = true
csharp_space_after_comma                                                                   = true
csharp_space_after_dot                                                                     = false
csharp_space_after_keywords_in_control_flow_statements                                     = true
csharp_space_after_semicolon_in_for_statement                                              = true
csharp_space_around_binary_operators                                                       = before_and_after
csharp_space_around_declaration_statements                                                 = false
csharp_space_before_colon_in_inheritance_clause                                            = true
csharp_space_before_comma                                                                  = false
csharp_space_before_dot                                                                    = false
csharp_space_before_open_square_brackets                                                   = false
csharp_space_before_semicolon_in_for_statement                                             = false
csharp_space_between_empty_square_brackets                                                 = false
csharp_space_between_method_call_empty_parameter_list_parentheses                          = false
csharp_space_between_method_call_name_and_opening_parenthesis                              = false
csharp_space_between_method_call_parameter_list_parentheses                                = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses                   = false
csharp_space_between_method_declaration_name_and_open_parenthesis                          = false
csharp_space_between_method_declaration_parameter_list_parentheses                         = false
csharp_space_between_parentheses                                                           = false
csharp_space_between_square_brackets                                                       = false

# Wrapping preferences
csharp_preserve_single_line_blocks                                                         = true
csharp_preserve_single_line_statements                                                     = false

#### Naming styles ####

# Naming rules

dotnet_naming_rule.schnittstelle_should_be_beginnt_mit_i.severity                          = error
dotnet_naming_rule.schnittstelle_should_be_beginnt_mit_i.symbols                           = schnittstelle
dotnet_naming_rule.schnittstelle_should_be_beginnt_mit_i.style                             = beginnt_mit_i

dotnet_naming_rule.typen_should_be_pascal_schreibweise.severity                            = warning
dotnet_naming_rule.typen_should_be_pascal_schreibweise.symbols                             = typen
dotnet_naming_rule.typen_should_be_pascal_schreibweise.style                               = pascal_schreibweise

dotnet_naming_rule.privates_oder_internes_feld_should_be_starts_with__.severity            = warning
dotnet_naming_rule.privates_oder_internes_feld_should_be_starts_with__.symbols             = privates_oder_internes_feld
dotnet_naming_rule.privates_oder_internes_feld_should_be_starts_with__.style               = starts_with__

dotnet_naming_rule.privates_oder_internes_statisches_feld_should_be_starts_with__.severity = warning
dotnet_naming_rule.privates_oder_internes_statisches_feld_should_be_starts_with__.symbols  = privates_oder_internes_statisches_feld
dotnet_naming_rule.privates_oder_internes_statisches_feld_should_be_starts_with__.style    = starts_with__

dotnet_naming_rule.nicht_feldmember_should_be_pascal_schreibweise.severity                 = warning
dotnet_naming_rule.nicht_feldmember_should_be_pascal_schreibweise.symbols                  = nicht_feldmember
dotnet_naming_rule.nicht_feldmember_should_be_pascal_schreibweise.style                    = pascal_schreibweise

dotnet_naming_rule.klasse_should_be_pascal_schreibweise.severity                           = warning
dotnet_naming_rule.klasse_should_be_pascal_schreibweise.symbols                            = klasse
dotnet_naming_rule.klasse_should_be_pascal_schreibweise.style                              = pascal_schreibweise

dotnet_naming_rule.struktur_should_be_pascal_schreibweise.severity                         = warning
dotnet_naming_rule.struktur_should_be_pascal_schreibweise.symbols                          = struktur
dotnet_naming_rule.struktur_should_be_pascal_schreibweise.style                            = pascal_schreibweise

dotnet_naming_rule.enumeration_should_be_pascal_schreibweise.severity                      = warning
dotnet_naming_rule.enumeration_should_be_pascal_schreibweise.symbols                       = enumeration
dotnet_naming_rule.enumeration_should_be_pascal_schreibweise.style                         = pascal_schreibweise

dotnet_naming_rule.local_variables_should_be_camel_case.severity                           = warning
dotnet_naming_rule.local_variables_should_be_camel_case.symbols                            = local_variables
dotnet_naming_rule.local_variables_should_be_camel_case.style                              = camel_case

dotnet_naming_rule.async_methods_should_be_asyncstyle.severity                             = warning
dotnet_naming_rule.async_methods_should_be_asyncstyle.symbols                              = async_methods
dotnet_naming_rule.async_methods_should_be_asyncstyle.style                                = asyncstyle

# Symbol specifications

dotnet_naming_symbols.klasse.applicable_kinds                                              = class
dotnet_naming_symbols.klasse.applicable_accessibilities                                    = public, internal, private, protected, protected_internal
dotnet_naming_symbols.klasse.required_modifiers =

dotnet_naming_symbols.schnittstelle.applicable_kinds                                       = interface
dotnet_naming_symbols.schnittstelle.applicable_accessibilities                             = public, internal, private, protected, protected_internal
dotnet_naming_symbols.schnittstelle.required_modifiers =

dotnet_naming_symbols.struktur.applicable_kinds                                            = struct
dotnet_naming_symbols.struktur.applicable_accessibilities                                  = public, internal, private, protected, protected_internal
dotnet_naming_symbols.struktur.required_modifiers =

dotnet_naming_symbols.enumeration.applicable_kinds                                         = enum
dotnet_naming_symbols.enumeration.applicable_accessibilities                               = public, internal, private, protected, protected_internal
dotnet_naming_symbols.enumeration.required_modifiers =

dotnet_naming_symbols.privates_oder_internes_feld.applicable_kinds                         = field
dotnet_naming_symbols.privates_oder_internes_feld.applicable_accessibilities               = internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.privates_oder_internes_feld.required_modifiers =

dotnet_naming_symbols.privates_oder_internes_statisches_feld.applicable_kinds              = field
dotnet_naming_symbols.privates_oder_internes_statisches_feld.applicable_accessibilities    = internal, private
dotnet_naming_symbols.privates_oder_internes_statisches_feld.required_modifiers            = static

dotnet_naming_symbols.typen.applicable_kinds                                               = class, struct, interface, enum
dotnet_naming_symbols.typen.applicable_accessibilities                                     = public, internal, private, protected, protected_internal
dotnet_naming_symbols.typen.required_modifiers =

dotnet_naming_symbols.nicht_feldmember.applicable_kinds                                    = property, event, delegate, method
dotnet_naming_symbols.nicht_feldmember.applicable_accessibilities                          = public, internal, private, protected, protected_internal
dotnet_naming_symbols.nicht_feldmember.required_modifiers =

dotnet_naming_symbols.local_variables.applicable_kinds                                     = local
dotnet_naming_symbols.local_variables.applicable_accessibilities =
dotnet_naming_symbols.local_variables.required_modifiers =

dotnet_naming_symbols.async_methods.applicable_kinds                                       = method
dotnet_naming_symbols.async_methods.applicable_accessibilities                             = *
dotnet_naming_symbols.async_methods.required_modifiers                                     = async

# Naming styles

dotnet_naming_style.pascal_schreibweise.required_prefix =
dotnet_naming_style.pascal_schreibweise.required_suffix =
dotnet_naming_style.pascal_schreibweise.word_separator =
dotnet_naming_style.pascal_schreibweise.capitalization                                     = pascal_case

dotnet_naming_style.beginnt_mit_i.required_prefix                                          = I
dotnet_naming_style.beginnt_mit_i.required_suffix =
dotnet_naming_style.beginnt_mit_i.word_separator =
dotnet_naming_style.beginnt_mit_i.capitalization                                           = pascal_case

dotnet_naming_style.starts_with__.required_prefix                                          = _
dotnet_naming_style.starts_with__.required_suffix =
dotnet_naming_style.starts_with__.word_separator =
dotnet_naming_style.starts_with__.capitalization                                           = pascal_case

dotnet_naming_style.camel_case.required_prefix =
dotnet_naming_style.camel_case.required_suffix =
dotnet_naming_style.camel_case.word_separator =
dotnet_naming_style.camel_case.capitalization                                              = camel_case

dotnet_naming_style.asyncstyle.required_prefix =
dotnet_naming_style.asyncstyle.required_suffix                                             = Async
dotnet_naming_style.asyncstyle.word_separator =
dotnet_naming_style.asyncstyle.capitalization                                              = pascal_case
